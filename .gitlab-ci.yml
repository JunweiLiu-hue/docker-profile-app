variables:
  APP_NAME: 'profile-app'
  DOCKER_HUB_USERNAME: 'junwliu'

stages:
  - build
  - test

build-and-publish:
  image: docker:27.0.2-cli-alpine3.20
  services:
    - docker:27.0.2-dind-alpine3.20
  stage: build
  script:
     - echo "Build stage executing"
     - docker build -t ${DOCKER_HUB_USERNAME}/${APP_NAME} .
     - docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_TOKEN}
     - docker tag  ${DOCKER_HUB_USERNAME}/${APP_NAME}  ${DOCKER_HUB_USERNAME}/${APP_NAME}:${CI_COMMIT_SHORT_SHA} 
     - docker push ${DOCKER_HUB_USERNAME}/${APP_NAME}:${CI_COMMIT_SHORT_SHA}


base-test:
  stage: test
  image: docker:27.0.2-cli-alpine3.20
  services: 
     - docker:27.0.2-dind-alpine3.20
  before_script:
    - docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_TOKEN}
    - docker pull  ${DOCKER_HUB_USERNAME}/${APP_NAME}:${CI_COMMIT_SHORT_SHA}  
    - docker pull  mongo:8.0-rc 
    - docker network create mongo-network
  script: 
    - docker run -d --net mongo-network --name mongoDB -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=secret  mongo:8.0-rc 
    - docker run -d --network mongo-network --name ${APP_NAME} -p 3000:3000 -e MONGO_PASS=secret -e MONGO_HOST=mongoDB ${DOCKER_HUB_USERNAME}/${APP_NAME}:${CI_COMMIT_SHORT_SHA}
    - docker ps                    # For debugging purposes
    - docker logs ${APP_NAME}     # For debugging purposes
    - apk add curl
    - curl http://docker:3000 | grep 'User profile'  # Simple test
